generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ******* //
// MODELS //
// ***** //
model SysUser {
  id                   Int         @id @default(autoincrement())
  identificationNumber String      @unique @db.VarChar(50)
  mobileNumber         String      @unique @db.VarChar(50)
  emailAddress         String      @unique @db.VarChar(200)
  firstName            String?     @db.VarChar(200)
  lastName             String?     @db.VarChar(200)
  password             String?     @db.VarChar(200)
  isVerified           Int?        @default(0) @db.SmallInt
  isCompliant          Int?        @default(0) @db.SmallInt
  isActive             Int?        @default(0) @db.SmallInt
  deviceToken          String?     @db.VarChar(200)
  createdAt            DateTime    @default(now()) @db.Timestamp
  blockedOn            DateTime?   @db.Timestamp
  blockedBy            Int?        @db.Integer
  referralCode         String?     @unique @db.VarChar(50)
  userType             UserType[]
  logCodes             LogCode[]
  LogEvents            LogEvents[]
}

model LogCode {
  codeId     Int           @default(autoincrement())
  userId     Int           @db.Integer
  code       String        @db.VarChar(200)
  createdAt  DateTime      @default(now()) @db.Timestamp
  validUntil DateTime      @db.Timestamp
  usedAt     DateTime?     @db.Timestamp
  codeReason LogCodeReason
  user       SysUser       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([codeId])
}

model LogEvents {
  eventId   Int       @default(autoincrement())
  userId    Int?      @db.Integer
  createdAt DateTime  @default(now()) @db.Timestamp
  desc      String?   @db.VarChar(200)
  remarks   String?   @db.VarChar(200)
  eventType EventType
  user      SysUser?  @relation(fields: [userId], references: [id])

  @@id([eventId])
}

// ****** //
// ENUMS //
// **** //
enum UserType {
  ADMINUSER
  CUSUSER
}

enum LogCodeReason {
  REGISTRATION
  PASSWORD_RESET
  TRANSACTION_VERIFY
}

enum EventType {
  USER
}
